% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cmap.R
\name{cmap}
\alias{cmap}
\alias{cmap_chr}
\alias{cmap_dbl}
\alias{cmap_df}
\alias{cmap_int}
\alias{cmap_lgl}
\title{Apply an anonymous function to each element of a vector}
\usage{
cmap(
  .x,
  .f,
  ...,
  env = rlang::caller_env(),
  map_fn = purrr::pmap,
  simplify = FALSE
)

cmap_chr(.x, .f, ..., env = parent.frame())

cmap_dbl(.x, .f, ..., env = parent.frame())

cmap_df(.x, .f, ..., env = parent.frame())

cmap_int(.x, .f, ..., env = parent.frame())

cmap_lgl(.x, .f, ..., env = parent.frame())
}
\arguments{
\item{.x}{A list or atomic vector.}

\item{.f}{A formula defining the anonymous function to be applied to every
element of \code{.x}, in which \code{.x} refers to the given element. See Examples for
how this differs from formulas in \link[purrr:map]{purrr::map}.}

\item{...}{Additional named arguments are passed directly to the execution
environment of the anonymous function as variables. These variables may include
transformations on the entire \code{.x} object as well as any variables local to the
calling environment of the \code{cmap} function.}

\item{env}{Specify the parent environment of the execution environment of the
anonymous function to be created. By default, this will be the environment in
which \code{cmap} is called.}

\item{map_fn}{The underlying function used to perform the mapping - this should
not be chosen directly as safe options are prespecified by the defaults of the
\verb{_chr}, \verb{_dbl}, \verb{_df}, \verb{_int}, and \verb{_lgl} variants of \code{cmap}.}

\item{simplify}{If \code{TRUE}, the function will attempt to flatten list outputs
to a vector where possible (if "unlisting" is not possible, say, in the case of
a list of lists of length > 1, the original output in list form will be returned).}
}
\value{
Returns a list (or vector) of the same length as \code{.x}. By default a
list, unless \code{cmap_} suffixes are used to specify the output vector type, or
if \code{simplify=TRUE} a vector of whichever type uniformly fits the unlisted
outputs.
}
\description{
\code{cmap} works very similarly to \link[purrr:map]{purrr::map} when specifying the formula of the
anonymous function using tilde (\code{~}) formula notation, but includes extra custom
pronouns to refer to related objects such as element names, element indeces,
and the function itself, so as to permit recursive function definitions.

\code{cmap_chr}, \code{cmap_dbl}, \code{cmap_df}, \code{cmap_int}, and \code{cmap_lgl} work like their
\code{purrr::map_etc} equivalents, attempting to output a vector of the specified type (or
a data.frame in the case of \code{cmap_df}) instead of a list.
}
\section{Pronouns}{
\code{cmap} supports reference to a set of useful "pronouns" that allow you to refer
to other objects within the formula \code{.f} as though they were locally defined
as variables. Note these are not pronouns in the \code{rlang} sense of the term, but
a convenient shorthand to provide additional functionality in a readable format.
See Examples for further clarification on the usage of each. Supported pronouns
are:
\itemize{
\item \code{.x} -- as in \link[purrr:map]{purrr::map}, this refers to an individual element of the list
\code{.x}.
\item \code{.i} -- the position of the element \code{.x} in a list.
\item \code{.nm} -- if \code{.x} is named, this returns the name corresponding to the element
\code{.x}; If \code{.x} is unnamed, returns \code{NULL}.
\item \code{.n} -- the value of the final position of the list, equivalent to \code{length(.x)}.
\item \code{.col} -- the entire input list object or vector, as opposed to just the single
element refered to in .x.
\item \code{.this} -- the anonymous function itself, to be used in cases where recursion
is needed.
}
}

