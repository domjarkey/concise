% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter..R
\name{filter.}
\alias{filter.}
\title{Filter rows with Concise notation}
\usage{
filter.(.data, ...)
}
\arguments{
\item{.data}{A data frame.}

\item{...}{Expressions passed on to \link[dplyr:filter]{dplyr::filter}. Any expression that
begins with \code{~} is treated as a concise formula and gains access to the
additional pronouns and helpers provided by \link{mutate.}.}
}
\value{
A data frame containing the rows that satisfy all filtering
expressions.
}
\description{
\code{filter.} behaves identically to \link[dplyr:filter]{dplyr::filter} while adding support for
Concise notation and pronouns, mirroring the behaviour of \link{mutate.}.
Expressions that begin with \code{~} are interpreted as concise formulas and are
evaluated rowwise using the same pronouns that \code{mutate.} recognises. These
expressions can also specify optional mappings and additional arguments using
the \verb{?} operator, just like \code{mutate.}.
}
\examples{
tibble::tibble(x = list("apple", NULL, "banana")) |>
  filter.(~ !is.null(x))

tibble::tibble(x = 1:5) |>
  filter.(~ .i \%\% 2 == 1)

}
