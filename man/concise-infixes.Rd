% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/infix.R
\name{concise-infixes}
\alias{concise-infixes}
\alias{\%from\%}
\alias{\%to\%}
\alias{\%to_NA\%}
\alias{\%with\%}
\title{Infix functions}
\usage{
input \%from\% domain

from \%to\% codomain

from \%to_NA\% codomain

expr \%with\% data
}
\arguments{
\item{input}{A vector of values to map (must contain only elements in domain vector)}

\item{domain}{A domain vector of unique elements to map from}

\item{from}{The output of \%from\% (see examples)}

\item{codomain}{A codomain vector of elements to map the input to (must be of
equal length to domain)}

\item{expr}{Any simple R expression to be evaluated}

\item{data}{A data frame or named list to be used as the local environment
variables for evaluation of expr}
}
\description{
Infix functions for mapping from one vector to another. \code{\%from\%} and
\code{\%to\%} should be used in sequence as ternary operators to map an input
from a domain vector to a codomain vector by position. \code{\%with\%} can
follow an expression to evaluate that expression using a list or data frame
as the environment for evaluation. See examples.
}
\examples{
# Map a sequence of letters to their numerical positions in the alphabet
c('d', 'o', 'g') \%from\% letters \%to\% 1:26

# Map US states to their abbreviations
c('California', 'Virginia', 'Texas') \%from\% state.name \%to\% state.abb

# Map character names to species using the dplyr::starwars dataset
data("starwars", package = "dplyr")
c("Han Solo", "R2-D2", "Chewbacca") \%from\% name \%to\% species \%with\% starwars

# Find mean height of characters in the starwars dataset
mean(height, na.rm = TRUE) \%with\% starwars

}
