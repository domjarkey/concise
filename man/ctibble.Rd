% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ctibble.R
\name{ctibble}
\alias{ctibble}
\title{Create tibbles with Concise notation}
\usage{
ctibble(...)
}
\arguments{
\item{...}{Name-value pairs giving tibble columns. As with
\link[tibble:tibble]{tibble::tibble}, evaluation happens sequentially so columns can refer to
previously created columns. When a column is defined using a two-sided
formula \code{x ~ expr}, the expression \code{expr} is evaluated iteratively as a
lambda in the same fashion as \link{cmutate}, including support for pronouns and
optional type specification via \verb{?}.}
}
\value{
A tibble created in the same way as \link[tibble:tibble]{tibble::tibble} but with
support for concise formulas.
}
\description{
\code{ctibble} functions exactly like \link[tibble:tibble]{tibble::tibble} with the additional
feature that column definitions specified using a \code{~} instead of \code{=} are
iteratively evaluated as a lambda function with access to the same pronouns
and helpers available in \link{cmutate}. This allows concise row-wise operations
while constructing a tibble, including referencing columns defined earlier in
the call, retrieving row indices, and accessing entire columns.
}
\examples{
ctibble(x = 1:3, y = 2 * x)

ctibble(
  x = 1:3,
  y = 3:1,
  sum ~ x + y ? int
)

}
